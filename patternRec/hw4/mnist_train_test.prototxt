name: "simpleLayeredCNN"

layer {
  name: "mnist"
  type: "Data"
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "bin/mnist_train_lmdb"
    backend: LMDB
    batch_size: 64
  }
  top: "data"
  top: "label"
}

layer {
  name: "conv1"
  type: "Convolution"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "data"
  top: "conv1"
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "relu1"
}

layer {
  name: "pool1"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    stride: 1
    pool: MAX
  }
  bottom: "relu1"
  top: "pool1"
}

layer {
  name: "conv2"
  type: "Convolution"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 20
    kernel_size: 7
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "pool1"
  top: "conv2"
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "relu2"
}

layer {
  name: "pool2"
  type: "Pooling"
  pooling_param {
    kernel_size: 5
    stride: 2
    pool: MAX
  }
  bottom: "relu2"
  top: "pool2"
}

layer {
  name: "ip1"
  type: "InnerProduct"
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "pool2"
  top: "ip1"
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip1"
  top: "relu3"
}

layer {
  name: "ip2"
  type: "InnerProduct"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  bottom: "relu3"
  top: "ip2"
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
}


